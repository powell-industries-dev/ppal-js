(function(s,n){typeof exports=="object"&&typeof module<"u"?module.exports=n(require("moment"),require("lodash")):typeof define=="function"&&define.amd?define(["moment","lodash"],n):(s=typeof globalThis<"u"?globalThis:s||self,s.ppal=n(s.moment,s._))})(this,function(s,n){"use strict";const r=[];for(let e=0;e<256;++e)r.push((e+256).toString(16).slice(1));function x(e,t=0){return(r[e[t+0]]+r[e[t+1]]+r[e[t+2]]+r[e[t+3]]+"-"+r[e[t+4]]+r[e[t+5]]+"-"+r[e[t+6]]+r[e[t+7]]+"-"+r[e[t+8]]+r[e[t+9]]+"-"+r[e[t+10]]+r[e[t+11]]+r[e[t+12]]+r[e[t+13]]+r[e[t+14]]+r[e[t+15]]).toLowerCase()}let d;const h=new Uint8Array(16);function S(){if(!d){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");d=crypto.getRandomValues.bind(crypto)}return d(h)}const m={randomUUID:typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};function f(e,t,o){if(m.randomUUID&&!e)return m.randomUUID();e=e||{};const i=e.random??e.rng?.()??S();if(i.length<16)throw new Error("Random bytes length must be >= 16");return i[6]=i[6]&15|64,i[8]=i[8]&63|128,x(i)}const p={id:e=>({$oid:e}),date:e=>({$date:e})},l={date:()=>s(new Date).toISOString()},y={generateObjectId:()=>{const e=(new Date().getTime()/1e3|0).toString(16),t="xxxxxxxxxxxxxxxx".replace(/[x]/g,()=>(Math.random()*16|0).toString(16)).toLowerCase();return`${e}${t}`},generateUuid:()=>f(),wrap:p.id},g={diff:({original:e,updated:t,prefix:o=""})=>!n.isObject(e)||!n.isObject(t)?n.isEqual(e,t)?{}:{[o.slice(0,-1)]:t}:n.isArray(e)&&n.isArray(t)?n.isEqual(e,t)?{}:{[o.slice(0,-1)]:t}:n.transform(t,(i,u,c)=>{const a=o+c;if(!n.has(e,c))i[a]=u;else if(!n.isEqual(u,e[c]))if(n.isObject(u)&&n.isObject(e[c])){const U=(void 0).diff({original:e[c],value:u,prefix:`${a}`});n.assign(i,U)}else i[a]=u},{}),hasProperties:({object:e,properties:t})=>n.some(t,o=>!n.isUndefined(n.get(e,o)))},w={uniqueInArray:({string:e,array:t})=>!new Set(t).has(e)},I={format:({date:e,type:t,timezone:o="America/Denver"})=>{switch(t){case"DayOnly":let i=s(e).format("YYYY-MM-DD");return s.tz(i,o).set({hour:6,minute:0}).toISOString();case"Timestamp":return s(e).toISOString();default:throw new Error(`${t}: This type isn't supported, please check your spelling.`)}},default:l.date,wrap:p.date};return{id:y,object:g,string:w,date:I}});
